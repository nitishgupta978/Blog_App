// Mocks generated by Mockito 5.3.0 from annotations
// in singup_app/test/mocks/mock_auth_repository.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:singup_app/auth/datasource/i_auth_repository.dart' as _i2;
import 'package:singup_app/auth/datasource/model.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAuthRepository extends _i1.Mock implements _i2.IAuthRepository {
  MockIAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.User?> login({String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(#login, [], {#email: email, #password: password}),
          returnValue: _i3.Future<_i4.User?>.value()) as _i3.Future<_i4.User?>);
  @override
  _i3.Future<bool> signUp(
          {String? email,
          String? password,
          String? firstName,
          String? lastName}) =>
      (super.noSuchMethod(
          Invocation.method(#signUp, [], {
            #email: email,
            #password: password,
            #firstName: firstName,
            #lastName: lastName
          }),
          returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
}
